{
  "$schema": "http://json-schema.org/schema",
  "cli": "nx",
  "id": "type-graphql-middleware",
  "title": "Create TypeGraphQL Middleware",
  "type": "object",
  "properties": {
    "middlewareName": {
      "type": "string",
      "x-prompt": "What Middleware name would you like to use?",
      "description": "What Middleware name would you like to use?",
      "$default": {
        "$source": "argv",
        "index": 0
      }
    },
    "appsOrLibs": {
      "type": "string",
      "x-prompt": "Which app or lib would you like to generate middleware in?",
      "description": "Which app or lib would you like to generate middleware in?"
    },
    "directory": {
      "type": "string",
      "x-prompt": "Which directory would you like to generate middleware in?",
      "description": "Which directory would you like to generate middleware in?"
    },
    "useFunctional": {
      "type": "boolean",
      "alias": "f",
      "x-prompt": "Use function type middleware",
      "description": "Use function type middleware"
    },
    "asDIProvider": {
      "type": "boolean",
      "alias": "d",
      "x-prompt": "Register middleware as Dependency Injection Provider",
      "description": "Register middleware as Dependency Injection Provider"
    },
    "diLibs": {
      "type": "string",
      "x-prompt": {
        "message": "Which lib would you like to use?",
        "type": "list",
        "items": [
          { "value": "TypeDI", "label": "TypeDI" },
          { "value": "Inversify", "label": "Inversify" }
        ]
      },
      "description": "Dependency Injection lib where middleware was registered in"
    },
    "higherOrder": {
      "type": "boolean",
      "x-prompt": "Use higher order middleware?",
      "description": "Use higher order middleware?"
    }
  },
  "required": [
    "middlewareName",
    "appsOrLibs",
    "directory",
    "useFunctional",
    "asDIProvider",
    "diLibs"
  ]
}
