<% if (!generateDTO && !extendInterfaceType) { -%>
import { ObjectType, Field } from 'type-graphql';
<% } -%>

<% if(!generateDTO && extendInterfaceType) { -%>
import { ObjectType, InterfaceType, Field } from 'type-graphql';
<% } -%>

<% if(generateDTO && !extendInterfaceType) { -%>
import { ObjectType, InputType, Field } from 'type-graphql';
<% } -%>

<% if(generateDTO && extendInterfaceType) { -%>
import { ObjectType, InputType, InterfaceType, Field } from 'type-graphql';
<% } -%>

<% if(useTypeormEntityDecorator && !extendTypeormBaseEntity) { -%>
import { Entity } from 'typeorm';
<% } -%>

<% if(useTypeormEntityDecorator && extendTypeormBaseEntity) { -%>
import { Entity, BaseEntity } from 'typeorm';
<% } -%>

<% if (dtoHandler === "ClassValidator") { -%>
import { IsString, IsInt, IsBoolean, IsOptional } from 'class-validator';
<% } -%>

<% if (dtoHandler === "Joi") { -%>
import { Joi } from 'joi;
<% } -%>

<% if (extendInterfaceType && !useTypeormEntityDecorator && !extendTypeormBaseEntity) { -%>
@InterfaceType({ description: "<%= componentName %> Interface Type" })
export abstract class <%= interfaceName %> { }

@ObjectType({ implements: <%= interfaceName %> })
export class <%= componentName -%> implements <%= interfaceName %> { }
<% } -%>

<% if (extendInterfaceType && useTypeormEntityDecorator && !extendTypeormBaseEntity) { -%>
@InterfaceType({ description: "<%= componentName %> Interface Type" })
export abstract class <%= interfaceName %> { }

@ObjectType({ implements: <%= interfaceName %> })
@Entity()
export class <%= componentName -%> implements <%= interfaceName %> { }
<% } -%>

<% if (extendInterfaceType && useTypeormEntityDecorator && extendTypeormBaseEntity) { -%>
@InterfaceType({ description: "<%= componentName %> Interface Type" })
export abstract class <%= interfaceName %> { }

@ObjectType({ implements: <%= interfaceName %> })
@Entity()
export class <%= componentName -%> extends BaseEntity implements <%= interfaceName %> { }
<% } -%>

<% if (!extendInterfaceType && !useTypeormEntityDecorator && !extendTypeormBaseEntity) { -%>
@ObjectType()
export class <%= componentName -%> { }
<% } -%>

<% if (!extendInterfaceType && useTypeormEntityDecorator && !extendTypeormBaseEntity) { -%>
@ObjectType()
@Entity()
export class <%= componentName -%> { }
<% } -%>

<% if (!extendInterfaceType && useTypeormEntityDecorator && extendTypeormBaseEntity) { -%>
@ObjectType()
@Entity()
export class <%= componentName -%> extends BaseEntity { }
<% } -%>

<% if (generateDTO) { %>
<%# Create ObjectType DTO -%>
@InputType() export class <%= CreateDTOClassName -%> { }

<%# Update ObjectType DTO -%>
@InputType()
export class <%= UpdateDTOClassName -%> { }

<%# Delete ObjectType DTO -%>
@InputType()
export class <%= DeleteDTOClassName -%> { }
<% } -%>
